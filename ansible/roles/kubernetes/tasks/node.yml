- name: Look for Systemd SWAP units
  when: ansible_facts.service_mgr == "systemd"
  ansible.builtin.shell: # noqa command-instead-of-module risky-shell-pipe
    cmd: |
      systemctl list-unit-files --type swap -q | grep -i swap | awk '{print $1}'
    executable: /bin/bash
  register: swap_service
  changed_when: swap_service.rc != 0
  become: true

- name: Disable SWAP units
  when: ansible_facts.service_mgr == "systemd" and (swap_service.stdout_lines | length != 0)
  ansible.builtin.systemd:
    daemon_reexec: true
    daemon_reload: true
    name: "{{ item }}"
    enabled: False
    masked: true
  loop: "{{ swap_service.stdout_lines }}"
  become: true

- name: Disable SWAP
  when: ansible_memory_mb.swap.total != 0
  register: swap_disable
  changed_when: swap_disable.rc != 0
  become: true
  ansible.builtin.command: swapoff -a

- name: Remove swapfile from /etc/fstab
  become: true
  ansible.posix.mount:
    path: none
    fstype: swap
    state: absent

- name: Install systemd dependencies
  become: true
  when: ansible_distribution == 'Debian'
  ansible.builtin.apt:
    name:
      - systemd-resolved
    state: present
  notify:
    - Kube | systemd-resolved installed

- name: Add propogation to systemd
  become: true
  community.general.ini_file:
    path: /lib/systemd/system/docker.service
    section: Service
    option: MountFlags
    value: shared
    mode: 0644
  notify:
    - Kube | docker options changed

- name: Check if Raspberrypi
  ansible.builtin.shell: cat /sys/firmware/devicetree/base/model || /bin/true
  register: rpi_data
  changed_when: false

- name: Tweak Raspberry Pis
  when:
    - rpi_data.stdout is defined
    - rpi_data.stdout is match("Raspberry Pi")
  ansible.builtin.include_tasks: tweaks_raspberry.yml

- name: Check if LXC
  become: true
  ansible.builtin.shell: cat /proc/1/environ || /bin/true
  register: lxc_data
  changed_when: false

- name: Tweak LXC
  when:
    - lxc_data.stdout is defined
    - lxc_data.stdout is search("container=lxc")
  ansible.builtin.include_tasks: tweaks_lxc.yml

- name: Tweak modprobe entries
  become: true
  community.general.ini_file:
    option: "{{ item.option }}"
    state: "{{ item.state }}"
    section: null
    path: /usr/lib/modules-load.d/kube.conf
    mode: 0644
    allow_no_value: true
  loop:
    - state: present
      option: br_netfilter
    - state: present
      option: overlay
  notify:
    - Kube | systemctl restart systemd-modules-load.service

- name: Tweak sysctl entries
  become: true
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: "{{ item.state }}"
    sysctl_file: /etc/sysctl.conf
    reload: false
  loop:
    - state: present
      name: kernel.pid_max
      value: "4194303"
    - state: present
      name: net.bridge.bridge-nf-call-arptables
      value: "1"
    - state: present
      name: net.bridge.bridge-nf-call-ip6tables
      value: "1"
    - state: present
      name: net.bridge.bridge-nf-call-iptables
      value: "1"
    - state: present
      name: net.ipv4.ip_forward
      value: "1"
    - state: present
      name: net.ipv6.conf.all.disable_ipv6
      value: "1"
    - state: present
      name: net.ipv6.conf.all.forwarding
      value: "0"
    - state: present
      name: net.ipv6.conf.default.disable_ipv6
      value: "1"
    - state: present
      name: net.ipv6.conf.lo.disable_ipv6
      value: "1"
    - state: present
      name: vm.min_free_kbytes
      value: 65536
    - state: present
      name: vm.swappiness
      value: "0"
  notify:
    - Kube | sysctl --system

- name: Configure Apparmor
  become: true
  ansible.builtin.lineinfile:
    mode: 0644
    path: /etc/apparmor.d/tunables/home.d/ubuntu
    line: "#@{HOMEDIRS}+="
    regexp: ^#@{HOMEDIRS}+=
    create: true

- name: Add Apt signing key for Kubernetes
  register: kubernetes_key
  become: true
  ansible.builtin.get_url:
    mode: 0644
    url: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_release }}/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes.gpg_armored

- name: De-Armor Kubernetes GPG key
  when: kubernetes_key.changed # noqa no-handler
  ansible.builtin.shell: # noqa command-instead-of-module
    cmd: |
      set -o pipefail
      gpg --dearmor < /etc/apt/keyrings/kubernetes.gpg_armored > /usr/share/keyrings/kubernetes.gpg
    executable: /bin/bash
  become: true
  no_log: true
  args:
    creates: /usr/share/keyrings/docker-archive-keyring.gpg

- name: Add repo for Kubernetes
  become: true
  ansible.builtin.apt_repository:
    filename: kubernetes
    repo: deb [signed-by=/usr/share/keyrings/kubernetes.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_release }}/deb/ /
    mode: 0666
    update_cache: true

- name: Install kubernetes packages
  become: true
  ansible.builtin.apt:
    name:
      - kubectl={{ kubernetes_apt }}
      - kubelet={{ kubernetes_apt }}
      - kubeadm={{ kubernetes_apt }}
      - fuse-overlayfs
      - nfs-common
      - open-iscsi
    state: present
    allow_downgrade: true

- name: Hold kubernetes version
  become: true
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl
