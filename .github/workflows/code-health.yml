name: Check Code health

on:
  push:
  #    paths:
  #      - ansible/**
  #    branches:
  #      - main
  pull_request:
    types: [opened, reopened, edited]
    branches-ignore:
      - renovate/*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  meta:
    name: Create meta object
    runs-on: ubuntu-latest
    permissions: read-all
    outputs:
      check_files: ${{ steps.vars.outputs.check_files }}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        # kics-scan ignore-line
        uses: tj-actions/changed-files@v42.0.5
        with:
          files_ignore_separator: ","

      - name: Create Meta variables
        id: vars
        run: |
          if [[ ${GITHUB_REF//refs\/heads\//} =~ ^renovate/.* ]]; then
            echo "check_files=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_OUTPUT
          else
            echo "check_files=." >> $GITHUB_OUTPUT
          fi

  yaml:
    name: Check YAML files
    runs-on: ubuntu-latest
    needs: [meta]
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: 3.11

      - name: Install linters
        working-directory: ansible/
        run: |
          pip install $(grep wheel requirements.txt)
          pip install $(grep yamllint requirements.txt)

      - name: Lint YAML files
        run: yamllint ${{ needs.meta.outputs.check_files }}

  kics:
    name: Run kics
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      checks: write
      contents: read
      security-events: write
      statuses: write
    needs: [yaml]
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Run kics Scan
        uses: Checkmarx/kics-github-action@9d6dace587d4f00b532d8823ec86094657ea070f
        with:
          path: ${{ needs.meta.outputs.check_files }}
          config_path: .kics/config.yml
          ignore_on_exit: results
          output_formats: sarif

      - name: Upload SARIF file
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: github/codeql-action/upload-sarif@905ae4af531685eaee37e94f46845bf4c420dc62
        with:
          sarif_file: results.sarif
          category: kics

  ansible-lint:
    name: Run Ansible Lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      checks: write
      contents: read
      security-events: write
      statuses: write
    needs: [yaml]
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Install Ansible-lint
        working-directory: ansible/
        run: |
          pip install $(grep wheel requirements.txt)
          pip install $(grep ansible-lint requirements.txt)
          sed -i 's/vault_password_file/#vault_password_file/g' ansible.cfg

      - name: Run Ansible-Lint
        working-directory: ansible/
        run: ansible-lint -p --nocolor --sarif-file results.sarif

      - name: Upload SARIF file
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: github/codeql-action/upload-sarif@905ae4af531685eaee37e94f46845bf4c420dc62
        with:
          sarif_file: ansible/results.sarif
          category: ansible
