name: Check Code health

on:
  push:
  #    paths:
  #      - ansible/**
  #    branches:
  #      - main
  pull_request:
    types: [opened, reopened, edited]
    branches-ignore:
      - renovate/*

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  meta:
    name: Create meta object
    runs-on: ubuntu-latest
    permissions: read-all
    outputs:
      check_files: ${{ steps.vars.outputs.check_files }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        with:
          files_ignore: ansible/requirements.txt,ansible/requirements.yml
          files_ignore_separator: ","

      - name: Create Meta variables
        id: vars
        run: |
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == "" ]]; then
            echo "check_files=." >> $GITHUB_OUTPUT
          elif [[ ${GITHUB_REF//refs\/heads\//} =~ ^renovate/.* ]]; then
            echo "check_files=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_OUTPUT
          else
            echo "check_files=." >> $GITHUB_OUTPUT
          fi

  yaml:
    name: Check YAML files
    runs-on: ubuntu-latest
    needs: [meta]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # 4.3.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ansible/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-yamllint

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.14

      - name: Install linters
        working-directory: ansible/
        run: |
          pip install $(grep wheel requirements.txt)
          pip install $(grep yamllint requirements.txt)

      - name: Lint YAML files
        run: yamllint ${{ needs.meta.outputs.check_files }}

  kics:
    name: Run kics
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      checks: write
      contents: read
      security-events: write
      statuses: write
    needs: [yaml, meta]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run kics Scan
        uses: Checkmarx/kics-github-action@c11ca46d31795a2f186f1af610d121e3bcd647a0
        with:
          path: ${{ needs.meta.outputs.check_files }}
          config_path: .kics/config.yml
          ignore_on_exit: results
          output_formats: sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@9b0ac1cc3b2985145e276933b2b96f423f56e68b
        with:
          sarif_file: results.sarif
          category: kics

  ansible-lint:
    name: Run Ansible Lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      checks: write
      contents: read
      security-events: write
      statuses: write
    needs: [yaml, meta]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.14

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # 4.3.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ansible/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-ansible

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # 4.3.0
        with:
          path: ~/.cache/ansible-compat
          key: ${{ runner.os }}-pip-${{ hashFiles('ansible/requirements.yml') }}
          restore-keys: |
            ${{ runner.os }}-galaxy

      - name: Install Ansible-lint
        working-directory: ansible/
        run: |
          pip install $(grep wheel requirements.txt)
          pip install $(grep ansible requirements.txt)
          pip install $(grep ansible-lint requirements.txt)
          sed -i 's/vault_password_file/#vault_password_file/g' ansible.cfg
          rm requirements.yml

      - name: Run Ansible-Lint
        working-directory: ansible/
        run: ansible-lint -p --nocolor --sarif-file ../ansible.sarif

      - name: Upload SARIF file
        if: "!cancelled()"
        uses: github/codeql-action/upload-sarif@9b0ac1cc3b2985145e276933b2b96f423f56e68b
        with:
          checkout_path: ${{ github.workspace }}/ansible
          sarif_file: ansible.sarif
          category: ansible

  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@16140ae1a102900babc80a33c44059580f687047 # v4.30.9
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@16140ae1a102900babc80a33c44059580f687047 # v4.30.9
        with:
          category: /language:${{matrix.language}}
