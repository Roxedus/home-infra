name: Check Code health

on:
  push:
  #    paths:
  #      - ansible/**
  #    branches:
  #      - main
  pull_request:
    types: [opened, reopened, edited]
    branches-ignore:
      - renovate/*

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  meta:
    name: Create meta object
    runs-on: ubuntu-latest
    permissions: read-all
    outputs:
      check_files: ${{ steps.vars.outputs.check_files }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files_ignore: ansible/requirements.txt,ansible/requirements.yml
          files_ignore_separator: ","

      - name: Create Meta variables
        id: vars
        run: |
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == "" ]]; then
            echo "check_files=." >> $GITHUB_OUTPUT
          elif [[ ${GITHUB_REF//refs\/heads\//} =~ ^renovate/.* ]]; then
            echo "check_files=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_OUTPUT
          else
            echo "check_files=." >> $GITHUB_OUTPUT
          fi

  yaml:
    name: Check YAML files
    runs-on: ubuntu-latest
    needs: [meta]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # 4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ansible/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-yamllint

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.11

      - name: Install linters
        working-directory: ansible/
        run: |
          pip install $(grep wheel requirements.txt)
          pip install $(grep yamllint requirements.txt)

      - name: Lint YAML files
        run: yamllint ${{ needs.meta.outputs.check_files }}

  kics:
    name: Run kics
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      checks: write
      contents: read
      security-events: write
      statuses: write
    needs: [yaml, meta]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run kics Scan
        uses: Checkmarx/kics-github-action@cd1f3774406f7818e3f79b77b093fe2ebaaf5c1d
        with:
          path: ${{ needs.meta.outputs.check_files }}
          config_path: .kics/config.yml
          ignore_on_exit: results
          output_formats: sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@e2b6f0f4a336fec2e2b57b908df292ca6d2a0fa3
        with:
          sarif_file: results.sarif
          category: kics

  ansible-lint:
    name: Run Ansible Lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      checks: write
      contents: read
      security-events: write
      statuses: write
    needs: [yaml, meta]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.11

      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # 4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ansible/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-ansible

      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # 4.2.4
        with:
          path: ~/.cache/ansible-compat
          key: ${{ runner.os }}-pip-${{ hashFiles('ansible/requirements.yml') }}
          restore-keys: |
            ${{ runner.os }}-galaxy

      - name: Install Ansible-lint
        working-directory: ansible/
        run: |
          pip install $(grep wheel requirements.txt)
          pip install $(grep ansible requirements.txt)
          pip install $(grep ansible-lint requirements.txt)
          sed -i 's/vault_password_file/#vault_password_file/g' ansible.cfg
          rm requirements.yml

      - name: Run Ansible-Lint
        working-directory: ansible/
        run: ansible-lint -p --nocolor --sarif-file ../ansible.sarif

      - name: Upload SARIF file
        if: "!cancelled()"
        uses: github/codeql-action/upload-sarif@e2b6f0f4a336fec2e2b57b908df292ca6d2a0fa3
        with:
          checkout_path: ${{ github.workspace }}/ansible
          sarif_file: ansible.sarif
          category: ansible

  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          category: /language:${{matrix.language}}
